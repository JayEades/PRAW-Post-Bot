# ADDS THE PHOTOS AND LINKS TO THE FOLDERS/ TXT FILES BASED ON CRITERIA, LOADS OF SUBREDDITS



import os
import shutil

modelname = input("Enter the model's name: ").lower()
account = input("What account are you populating?: (1 or 2) ").lower()
subreddits = input("What subreddits do you want?: (of101 or all) ").lower()
hair_color = input("Enter the model's hair colour: ").lower()
age = int(input("Enter the model's age: "))
body_type = input("Enter model's size (Thin, Curvy): ").lower()
height = input("Enter model's height (Short, Tall): ").lower()
tattoos = input("Does the model have tattoos?: ").lower()
pierced = input("Does the model have piercings?: ").lower()
piercedt = input("Does the model have pierced nips?: ").lower()
ethnicity = input("Enter the models ethnicity (White, Black, APAC, Eastern Europe): ").lower()
work = input("Have they had work done?: ").lower()

src_dir = os.path.join(r"C:\Example\Example\Models", modelname, "Example")

excluded_subreddits = []

#Add/remove any subreddits you want, add them first to both of the 'file_mapping' things, then if they are specific subreddits add them to any of the excluding stuff. 

if account == "1":
    dst_dir = os.path.join(r"G:\My Drive\Reddit Bots\Models", modelname, "Populated Subreddits - Account 1")
    excluded_subreddits = ['r Amateur', 'r Nofans', 'r Nofansmild', 'r Gonewild30plus', 'r GoneWild', 'r Ginger']
elif account == "2":
    dst_dir = os.path.join(r"G:\My Drive\Reddit Bots\Models", modelname, "Populated Subreddits - Account 2")
    excluded_subreddits = ['r OnlyFansBlonde', 'r OnlyFansGenZ', 'r Nsfw_Social', 'r OnlyFans101Asstastic', 'r onlyfansgirls101', 'r onlyfanspromotions', 'r OnlyFansAsstastic', 'r OnlyFans101BustyBabes', 'r OnlyFansBusty', 'r OnlyFansAmazons', 'r OnlyFansNaturallyHot', 'r OnlyFansMasCaliente', 'r OnlyFansInkless', 'r OnlyFansBrainBabes', 'r OnlyFansBrunette', 'r OnlyFansReds', 'r OnlyFansSHMILFS', 'r OnlyFansCougars', 'r OnlyFans101', 'r OnlyFans101BrandNew', 'r OnlyFans101Ebony', 'r OnlyFans101FitGirls', 'r OnlyFans101HotMomBods', 'r OnlyFans101Inked', 'r OnlyFans101Pierced', 'r OnlyFans101TallGirls', 'r OnlyFansAPAC', 'r OnlyFansBigBeauties', 'r OnlyFansEasternEurope', 'r OnlyFansFaces', 'r OnlyFansFashionistas', 'r Nsfw_Amateurs', 'r OnlyFansJustRight', 'r OnlyFansNeverNude', 'r OnlyFansNextDoorGirls', 'r OnlyFansPetite', 'r OnlyFansprom', 'r OnlyFansPromotion', 'r onlyfans_blessed', 'r OnlyFansRainbowHeads', 'r OnlyFansShorties', 'r OnlyFansSmallGirls', 'r PromoteOnlyFans', 'r HungryButts', 'r Booty', 'r Asstastic', 'r WhiteCheeks', 'r Backview', 'r Boobs', 'r NaturalTitties', 'r PiercedNipples', 'r TallGoneWild', 'r PiercedNSFW', 'r Curvy', 'r ThickWhiteGirls', 'r Brunette', 'r OBSF', 'r Blonde_Bombshells', 'r RedHeads', 'r RedheadGifs', 'r OnlyFansInkless', 'r gonewild18', '18F', '18y', 'r PerfectBody', 'r Latinas', 'r LatinasGW', 'r UnderwearGW', 'r GonewildColor', 'r Asiansgonewild', 'r GoneMildColor', 'r Gymgirls', 'r RealGirls', 'r AdorableNudes', 'r AmIHotAF', 'r hotclub', 'r altgonewild', 'r funsized', 'r UniversityGirls', 'r realsexyselfies', 'r skinnytail', 'r Babes', 'r barelylegalteens', 'r CamGirls', 'r BabesNSFW', 'r PerfectBabesNSFW', 'r AlldayfuckNSFW', 'r AthleticBabes', 'r ClothedForPrejacs', 'r NSFW_Social', 'r SmallCutie', 'r GirlsGW', 'r SexyButNotPorn', 'r TwentyPlus', 'r SchoolgirlsXXX', 'r RealCute', 'r Sluts', 'r Selfie_Heaven', 'r SlutsOfSnapchat', 'r DaughterTraining', 'r Blondes', 'r CollegeSluts', 'r NudeNonNude', 'r BarelyLegal', 'r VeryBarelyLegal', 'r 2000sGirls', 'r DadWouldBeProud', 'r GreatView', 'r SelfiesGoneWild', 'r Slut', 'r WifeyWorthy', 'r xsmallgirls']
    
    
if subreddits == "of101":
    excluded_subreddits.extend(['r HungryButts', 'r Booty', 'r Asstastic', 'r WhiteCheeks', 'r Backview', 'r Boobs', 'r NaturalTitties', 'r PiercedNipples', 'r Nofansmild', 'r PiercedNSFW', 'r TallGoneWild', 'r Curvy', 'r ThickWhiteGirls', 'r Brunette', 'r Ginger', 'r OBSF', 'r Blonde_Bombshells', 'r RedHeads', 'r RedheadGifs', 'r OnlyFansInkless', 'r gonewild18', '18F', '18y', 'r PerfectBody', 'r Latinas', 'r LatinasGW', 'r UnderwearGW', 'r Nofans', 'r GonewildColor', 'r Asiansgonewild', 'r GoneMildColor', 'r Gonewild30plus', 'r Gymgirls', 'r RealGirls', 'r Amateur', 'r AdorableNudes', 'r AmIHotAF', 'r hotclub', 'r altgonewild', 'r funsized', 'r UniversityGirls', 'r realsexyselfies', 'r skinnytail', 'r Babes', 'r barelylegalteens', 'r CamGirls', 'r BabesNSFW', 'r PerfectBabesNSFW', 'r AlldayfuckNSFW', 'r AthleticBabes', 'r ClothedForPrejacs', 'r NSFW_Social', 'r SmallCutie', 'r GirlsGW', 'r SexyButNotPorn', 'r TwentyPlus', 'r SchoolgirlsXXX', 'r RealCute', 'r Sluts', 'r Selfie_Heaven', 'r SlutsOfSnapchat', 'r DaughterTraining', 'r Blondes', 'r CollegeSluts', 'r NudeNonNude', 'r BarelyLegal', 'r VeryBarelyLegal', 'r 2000sGirls', 'r DadWouldBeProud', 'r GoneWild', 'r GreatView', 'r SelfiesGoneWild', 'r Slut', 'r WifeyWorthy', 'r xsmallgirls'])
elif subreddits == "all":
    excluded_subreddits.extend(['r OnlyFansBlonde', 'r OnlyFansGenZ', 'r Nsfw_Social', 'r OnlyFans101Asstastic', 'r onlyfansgirls101', 'r onlyfanspromotions', 'r OnlyFansAsstastic', 'r OnlyFans101BustyBabes', 'r OnlyFansBusty', 'r OnlyFansAmazons', 'r OnlyFansNaturallyHot', 'r OnlyFansMasCaliente', 'r OnlyFansInkless', 'r OnlyFansBrainBabes', 'r OnlyFansBrunette', 'r OnlyFansReds', 'r OnlyFansSHMILFS', 'r OnlyFansCougars', 'r OnlyFans101', 'r OnlyFans101BrandNew', 'r OnlyFans101Ebony', 'r OnlyFans101FitGirls', 'r OnlyFans101HotMomBods', 'r OnlyFans101Inked', 'r OnlyFans101Pierced', 'r OnlyFans101TallGirls', 'r OnlyFansAPAC', 'r OnlyFansBigBeauties', 'r OnlyFansEasternEurope', 'r OnlyFansFaces', 'r OnlyFansFashionistas', 'r Nsfw_Amateurs', 'r OnlyFansJustRight', 'r OnlyFansNeverNude', 'r OnlyFansNextDoorGirls', 'r OnlyFansPetite', 'r OnlyFansprom', 'r OnlyFansPromotion', 'r onlyfans_blessed', 'r OnlyFansRainbowHeads', 'r OnlyFansShorties', 'r OnlyFansSmallGirls', 'r PromoteOnlyFans'])
    
    
if hair_color == "blonde":
    excluded_subreddits.extend(['r Brunette', 'r RedHeads', 'r RedheadGifs', 'r Ginger', 'r OnlyFansBrunette', 'r OnlyFansReds'])
elif hair_color == "red":
    excluded_subreddits.extend(['r Blondes', 'r Brunette', 'r Blonde_Bombshells', 'r OnlyFansBlonde', 'r OnlyFansBrunette'])
elif hair_color == "brown":
    excluded_subreddits.extend(['r Blondes', 'r RedHeads', 'r RedheadGifs', 'r Ginger', 'r Blonde_Bombshells', 'r OnlyFansBlonde', 'r OnlyFansReds'])

if age <= 27:
    excluded_subreddits.extend(['r Gonewild30plus', 'r OBSF', 'r OnlyFansSHMILFS', 'r OnlyFansCougars', 'r OnlyFans101HotMomBods'])
    
if age >= 25: 
    excluded_subreddits.append('r OnlyFansGenZ')

if age >= 23: 
    excluded_subreddits.extend(['r BarelyLegal', 'r barelylegalteens', 'r Legalteens', 'r VeryBarelyLegal', 'r 2000sGirls', 'r SchoolgirlsXXX', 'r CollegeSluts', 'r DaughterTraining', 'r UniversityGirls'])

if age < 20:
    excluded_subreddits.extend(['r TwentyPlus'])
    
if age >= 20:
    excluded_subreddits.extend(['r Legalteens', 'r gonewild18'])

if age >= 19:
    excluded_subreddits.extend(['18F', '18y'])

if body_type == "curvy":
    excluded_subreddits.extend(['r xsmallgirls', 'r SmallCutie', 'r skinnytail', 'r Gymgirls', 'r AthleticBabes', 'r funsized', 'r OnlyFans101FitGirls'])
elif body_type == "thin":
    excluded_subreddits.extend(['r Curvy', 'r ThickWhiteGirls', 'r OnlyFansBigBeauties'])

if height == "tall":
    excluded_subreddits.extend(['r SmallCutie', 'r xSmallGirls', 'r funsized', 'r OnlyFansPetite', 'r OnlyFansSmallGirls', 'r OnlyFansShorties'])
elif height == "short":
    excluded_subreddits.extend(['r TallGoneWild', 'r OnlyFans101TallGirls', 'r OnlyFansAmazons'])
    
if tattoos == "no": 
    excluded_subreddits.extend(['r HotChicksWithTattoos', 'r OnlyFans101Inked'])
    
if tattoos == "yes":
    excluded_subreddits.extend(['r OnlyFansInkless'])
                  
if pierced == "no":
    excluded_subreddits.extend(['r PiercedNSFW', 'r OnlyFans101Pierced'])
    
if piercedt == "no":
    excluded_subreddits.extend(['r PiercedNipples'])
                  
if ethnicity == "white":
    excluded_subreddits.extend(['r Asiansgonewild', 'r GonewildColor', 'r GoneMildColor', 'r Latinas', 'r LatinasGW', 'r OnlyFansAPAC', 'r OnlyFansEasternEurope', 'r OnlyFans101Ebony', 'r OnlyFansMasCaliente'])
elif ethnicity == "black":
    excluded_subreddits.extend(['r Asiansgonewild', 'r WhiteCheeks', 'r OnlyFansAPAC', 'r OnlyFansEasternEurope'])
elif ethnicity == "apac":
    excluded_subreddits.extend(['r Latinas', 'r LatinasGW', 'r OnlyFansEasternEurope', 'r OnlyFans101Ebony'])
elif ethnicity == "eastern europe":
    excluded_subreddits.extend(['r Asiansgonewild', 'r Latinas', 'r LatinasGW', 'r OnlyFans101Ebony', 'r OnlyFansAPAC', 'r OnlyFansMasCaliente'])
    
if work == "yes":
    excluded_subreddits.extend(['r NaturalTitties', 'r OnlyFansNaturallyHot'])

file_mapping = {
    'All.txt': [subreddit for subreddit in ['r OnlyFansBlonde', 'r OnlyFansGenZ', 'r Nsfw_Social', 'r onlyfansgirls101', 'r onlyfanspromotions', 'r OnlyFansAmazons', 'r OnlyFansNaturallyHot', 'r OnlyFansMasCaliente', 'r OnlyFansInkless', 'r OnlyFansBrainBabes', 'r OnlyFansBrunette', 'r OnlyFansReds', 'r OnlyFansSHMILFS', 'r OnlyFansCougars', 'r OnlyFans101', 'r OnlyFans101BrandNew', 'r OnlyFans101Ebony', 'r OnlyFans101FitGirls', 'r OnlyFans101HotMomBods', 'r OnlyFans101Inked', 'r OnlyFans101Pierced', 'r OnlyFans101TallGirls', 'r OnlyFansAPAC', 'r OnlyFansBigBeauties', 'r OnlyFansEasternEurope', 'r OnlyFansFaces', 'r OnlyFansFashionistas', 'r Nsfw_Amateurs', 'r OnlyFansJustRight', 'r OnlyFansNeverNude', 'r OnlyFansNextDoorGirls', 'r OnlyFansPetite', 'r OnlyFansprom', 'r OnlyFansPromotion', 'r onlyfans_blessed', 'r OnlyFansRainbowHeads', 'r OnlyFansShorties', 'r OnlyFansSmallGirls', 'r PromoteOnlyFans', 'r Nofansmild', 'r PiercedNSFW', 'r TallGoneWild', 'r Curvy', 'r ThickWhiteGirls', 'r Brunette', 'r Ginger', 'r OBSF', 'r Blonde_Bombshells', 'r RedHeads', 'r RedheadGifs', 'r OnlyFansInkless', 'r gonewild18', '18F', '18y', 'r PerfectBody', 'r Latinas', 'r LatinasGW', 'r UnderwearGW', 'r Nofans', 'r GonewildColor', 'r Asiansgonewild', 'r GoneMildColor', 'r Gonewild30plus', 'r Gymgirls', 'r RealGirls', 'r Amateur', 'r AdorableNudes', 'r AmIHotAF', 'r hotclub', 'r altgonewild', 'r funsized', 'r UniversityGirls', 'r realsexyselfies', 'r skinnytail', 'r Babes', 'r barelylegalteens', 'r CamGirls', 'r BabesNSFW', 'r PerfectBabesNSFW', 'r AlldayfuckNSFW', 'r AthleticBabes', 'r ClothedForPrejacs', 'r NSFW_Social', 'r SmallCutie', 'r GirlsGW', 'r SexyButNotPorn', 'r TwentyPlus', 'r SchoolgirlsXXX', 'r RealCute', 'r Sluts', 'r Selfie_Heaven', 'r SlutsOfSnapchat', 'r DaughterTraining', 'r Blondes', 'r CollegeSluts', 'r NudeNonNude', 'r BarelyLegal', 'r VeryBarelyLegal', 'r 2000sGirls', 'r DadWouldBeProud', 'r GoneWild', 'r GreatView', 'r SelfiesGoneWild', 'r Slut', 'r WifeyWorthy', 'r xsmallgirls'] if subreddit not in excluded_subreddits],
    'Boobs.txt': [subreddit for subreddit in ['r Boobs', 'r NaturalTitties', 'r PiercedNipples', 'r OnlyFans101BustyBabes', 'r OnlyFansBusty'] if subreddit not in excluded_subreddits],
    'Bum.txt': [subreddit for subreddit in ['r HungryButts', 'r Booty', 'r Asstastic', 'r WhiteCheeks', 'r Backview', 'r OnlyFansAsstastic', 'r OnlyFans101Asstastic'] if subreddit not in excluded_subreddits]
 
}

for src_file, dst_files in file_mapping.items():
    src_path = os.path.join(src_dir, src_file)
    for dst_file in dst_files:
        dst_path = os.path.join(dst_dir, dst_file + '.txt')
        if os.path.isfile(dst_path):
            with open(dst_path, 'r') as f:
                existing_links = f.read().splitlines()
            with open(src_path, 'r') as f:
                contents = f.read().splitlines()
            unique_links = set(contents) - set(existing_links)
            if unique_links:
                with open(dst_path, 'a', newline='\r\n') as f:
                    for link in unique_links:
                        f.write(link + '\n')
                print(f"{len(unique_links)} new links written to {dst_file}")
            else:
                print(f"0 links were added to {dst_file}")
        else:
            with open(src_path, 'r') as f:
                contents = f.read().splitlines()
            with open(dst_path, 'w', newline='\r\n') as f:
                f.write('\n'.join(contents))
            print(f"{dst_file} was created and {len(contents)} links written to {dst_file}")

folder_mapping = {
    'All': [subreddit for subreddit in ['r OnlyFansBlonde', 'r OnlyFansGenZ', 'r Nsfw_Social', 'r onlyfansgirls101', 'r onlyfanspromotions', 'r OnlyFansAmazons', 'r OnlyFansNaturallyHot', 'r OnlyFansMasCaliente', 'r OnlyFansInkless', 'r OnlyFansBrainBabes', 'r OnlyFansBrunette', 'r OnlyFansReds', 'r OnlyFansSHMILFS', 'r OnlyFansCougars', 'r OnlyFans101', 'r OnlyFans101BrandNew', 'r OnlyFans101Ebony', 'r OnlyFans101FitGirls', 'r OnlyFans101HotMomBods', 'r OnlyFans101Inked', 'r OnlyFans101Pierced', 'r OnlyFans101TallGirls', 'r OnlyFansAPAC', 'r OnlyFansBigBeauties', 'r OnlyFansEasternEurope', 'r OnlyFansFaces', 'r OnlyFansFashionistas', 'r Nsfw_Amateurs', 'r OnlyFansJustRight', 'r OnlyFansNeverNude', 'r OnlyFansNextDoorGirls', 'r OnlyFansPetite', 'r OnlyFansprom', 'r OnlyFansPromotion', 'r onlyfans_blessed', 'r OnlyFansRainbowHeads', 'r OnlyFansShorties', 'r OnlyFansSmallGirls', 'r PromoteOnlyFans', 'r Nofansmild', 'r PiercedNSFW', 'r TallGoneWild', 'r Curvy', 'r ThickWhiteGirls', 'r Brunette', 'r Ginger', 'r OBSF', 'r Blonde_Bombshells', 'r RedHeads', 'r RedheadGifs', 'r OnlyFansInkless', 'r gonewild18', '18F', '18y', 'r PerfectBody', 'r Latinas', 'r LatinasGW', 'r UnderwearGW', 'r Nofans', 'r GonewildColor', 'r Asiansgonewild', 'r GoneMildColor', 'r Gonewild30plus', 'r Gymgirls', 'r RealGirls', 'r Amateur', 'r AdorableNudes', 'r AmIHotAF', 'r hotclub', 'r altgonewild', 'r funsized', 'r UniversityGirls', 'r realsexyselfies', 'r skinnytail', 'r Babes', 'r barelylegalteens', 'r CamGirls', 'r BabesNSFW', 'r PerfectBabesNSFW', 'r AlldayfuckNSFW', 'r AthleticBabes', 'r ClothedForPrejacs', 'r NSFW_Social', 'r SmallCutie', 'r GirlsGW', 'r SexyButNotPorn', 'r TwentyPlus', 'r SchoolgirlsXXX', 'r RealCute', 'r Sluts', 'r Selfie_Heaven', 'r SlutsOfSnapchat', 'r DaughterTraining', 'r Blondes', 'r CollegeSluts', 'r NudeNonNude', 'r BarelyLegal', 'r VeryBarelyLegal', 'r 2000sGirls', 'r DadWouldBeProud', 'r GoneWild', 'r GreatView', 'r SelfiesGoneWild', 'r Slut', 'r WifeyWorthy', 'r xsmallgirls'] if subreddit not in excluded_subreddits],
    'Boobs': [subreddit for subreddit in ['r Boobs', 'r NaturalTitties', 'r PiercedNipples', 'r OnlyFans101BustyBabes', 'r OnlyFansBusty'] if subreddit not in excluded_subreddits],
    'Bum': [subreddit for subreddit in ['r HungryButts', 'r Booty', 'r Asstastic', 'r WhiteCheeks', 'r Backview', 'r OnlyFansAsstastic', 'r OnlyFans101Asstastic'] if subreddit not in excluded_subreddits]
    
}

for src_folder, dst_folders in folder_mapping.items():
    src_path = os.path.join(src_dir, src_folder)
    for dst_folder in dst_folders:
        dst_path = os.path.join(dst_dir, dst_folder)
        os.makedirs(dst_path, exist_ok=True)
        if os.path.isdir(dst_path):
            existing_files = os.listdir(dst_path)
            src_files = os.listdir(src_path)
            new_files = [file for file in src_files if file not in existing_files]
            if new_files:
                for file in new_files:
                    src_file_path = os.path.join(src_path, file)
                    dst_file_path = os.path.join(dst_path, file)
                    shutil.copy(src_file_path, dst_file_path)
                print(f"{len(new_files)} new images copied to {dst_folder}")
            else:
                print(f"0 images were added to {dst_folder}")
        else:
            src_files = os.listdir(src_path)
            for file in src_files:
                src_file_path = os.path.join(src_path, file)
                dst_file_path = os.path.join(dst_path, file)
                shutil.copy(src_file_path, dst_file_path)
            print(f"{dst_folder} folder was created and {len(src_files)} images copied to {dst_folder}")
